/*
 * Copyright (C) 2017 Black Duck Software Inc.
 * http://www.blackducksoftware.com/
 * All rights reserved.
 *
 * This software is the confidential and proprietary information of
 * Black Duck Software ("Confidential Information"). You shall not
 * disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into
 * with Black Duck Software.
 */
package com.synopsys.integration.alert.mock.entity;

import com.google.gson.JsonObject;
import com.synopsys.integration.alert.common.enumeration.VulnerabilityOperation;
import com.synopsys.integration.alert.database.entity.VulnerabilityEntity;
import com.synopsys.integration.alert.web.model.Config;

public class MockVulnerabilityEntity extends MockEntityUtil<VulnerabilityEntity> {
    private final String vulnerabilityId;
    private final VulnerabilityOperation operation;
    private final Long id;
    private final Long notificationId;

    public MockVulnerabilityEntity() {
        this("vulnerabiltyId", VulnerabilityOperation.ADD, 1L, 1L);
    }

    private MockVulnerabilityEntity(final String vulnerabilityId, final VulnerabilityOperation operation, final Long id, final Long notificationId) {
        super();
        this.vulnerabilityId = vulnerabilityId;
        this.operation = operation;
        this.id = id;
        this.notificationId = notificationId;
    }

    public String getVulnerabilityId() {
        return vulnerabilityId;
    }

    public VulnerabilityOperation getOperation() {
        return operation;
    }

    @Override
    public Long getId() {
        return id;
    }

    @Override
    public Config createConfig() {
        return null;
    }

    @Override
    public Config createEmptyConfig() {
        return null;
    }

    @Override
    public VulnerabilityEntity createEntity() {
        final VulnerabilityEntity entity = new VulnerabilityEntity(vulnerabilityId, operation, notificationId);
        entity.setId(id);
        return entity;
    }

    @Override
    public VulnerabilityEntity createEmptyEntity() {
        return new VulnerabilityEntity();
    }

    @Override
    public String getEntityJson() {
        final JsonObject json = new JsonObject();
        json.addProperty("vulnerabilityId", vulnerabilityId);
        json.addProperty("operation", operation.name());
        json.addProperty("notificationId", notificationId);
        json.addProperty("id", id);
        return json.toString();
    }

}
