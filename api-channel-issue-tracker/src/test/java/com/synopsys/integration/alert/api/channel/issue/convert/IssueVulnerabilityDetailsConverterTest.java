package com.synopsys.integration.alert.api.channel.issue.convert;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.jetbrains.annotations.Nullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import com.synopsys.integration.alert.api.channel.issue.convert.mock.MockIssueTrackerMessageFormatter;
import com.synopsys.integration.alert.api.channel.issue.model.IssueVulnerabilityDetails;
import com.synopsys.integration.alert.api.channel.issue.model.IssueVulnerabilityModel;
import com.synopsys.integration.alert.common.message.model.LinkableItem;
import com.synopsys.integration.alert.processor.api.extract.model.project.ComponentConcernSeverity;

public class IssueVulnerabilityDetailsConverterTest {
    private static final IssueVulnerabilityDetails ISSUE_VULNERABILITY_DETAILS = new IssueVulnerabilityDetails(
        false,
        List.of(
            createIssueVulnerabilityWithDefaultUrl(ComponentConcernSeverity.MAJOR_HIGH, "CVE-363"),
            createIssueVulnerabilityWithDefaultUrl(ComponentConcernSeverity.UNSPECIFIED_UNKNOWN, "CVE-017"),
            createIssueVulnerability(ComponentConcernSeverity.MINOR_MEDIUM, "CVE-111", null)
        ),
        List.of(
            createIssueVulnerabilityWithDefaultUrl(ComponentConcernSeverity.UNSPECIFIED_UNKNOWN, "CVE-404")
        ),
        List.of()
    );

    @Test
    public void createVulnerabilityDetailsSectionPiecesTest() {
        callCreateVulnerabilityDetailsSectionPieces();
    }

    @Test
    @Disabled
    public void previewFormatting() {
        List<String> sectionPieces = callCreateVulnerabilityDetailsSectionPieces();
        String joinedSectionPieces = StringUtils.join(sectionPieces, "");
        System.out.print(joinedSectionPieces);
    }

    private List<String> callCreateVulnerabilityDetailsSectionPieces() {
        MockIssueTrackerMessageFormatter formatter = MockIssueTrackerMessageFormatter.withIntegerMaxValueLength();
        IssueVulnerabilityDetailsConverter converter = new IssueVulnerabilityDetailsConverter(formatter);
        return converter.createVulnerabilityDetailsSectionPieces(ISSUE_VULNERABILITY_DETAILS);
    }

    private static IssueVulnerabilityModel createIssueVulnerabilityWithDefaultUrl(ComponentConcernSeverity severity, String id) {
        return createIssueVulnerability(severity, id, "https://vuln-" + id);
    }

    private static IssueVulnerabilityModel createIssueVulnerability(ComponentConcernSeverity severity, String id, @Nullable String url) {
        LinkableItem vulnerability = new LinkableItem("Vulnerability", id, url);
        return new IssueVulnerabilityModel(severity, vulnerability);
    }

}
