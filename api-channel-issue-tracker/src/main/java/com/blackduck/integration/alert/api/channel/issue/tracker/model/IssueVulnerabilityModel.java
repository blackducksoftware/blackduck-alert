/*
 * blackduck-alert
 *
 * Copyright (c) 2024 Black Duck Software, Inc.
 *
 * Use subject to the terms and conditions of the Black Duck Software End User Software License and Maintenance Agreement. All rights reserved worldwide.
 */
package com.blackduck.integration.alert.api.channel.issue.tracker.model;

import com.blackduck.integration.alert.api.common.model.AlertSerializableModel;
import com.blackduck.integration.alert.common.message.model.LinkableItem;
import com.blackduck.integration.alert.api.processor.extract.model.project.ComponentConcern;
import com.blackduck.integration.alert.api.processor.extract.model.project.ComponentConcernSeverity;
import com.blackduck.integration.alert.api.processor.extract.model.project.ComponentConcernType;

public class IssueVulnerabilityModel extends AlertSerializableModel {
    private final ComponentConcernSeverity severity;
    private final LinkableItem vulnerability;

    public static IssueVulnerabilityModel fromComponentConcern(ComponentConcern componentConcern) {
        ComponentConcernType componentConcernType = componentConcern.getType();
        if (!ComponentConcernType.VULNERABILITY.equals(componentConcernType)) {
            throw new IllegalArgumentException(String.format("Expected a %s ComponentConcern, but this was a %s", ComponentConcernType.VULNERABILITY.name(), componentConcernType));
        }

        return new IssueVulnerabilityModel(
            componentConcern.getSeverity(),
            new LinkableItem(ComponentConcernType.VULNERABILITY.getDisplayName(), componentConcern.getName(), componentConcern.getUrl().orElse(null))
        );
    }

    public IssueVulnerabilityModel(ComponentConcernSeverity severity, LinkableItem vulnerability) {
        this.severity = severity;
        this.vulnerability = vulnerability;
    }

    public ComponentConcernSeverity getSeverity() {
        return severity;
    }

    public LinkableItem getVulnerability() {
        return vulnerability;
    }

}
